
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Allow anyone to read events if they are authenticated
      allow read: if request.auth != null;

      // Allow authenticated users to create new events
      // The client code ensures ownerUids is set with the creator's UID.
      allow create: if request.auth != null && request.resource.data.ownerUids[0] == request.auth.uid;

      // Allow a user to update an event if their UID is in the event's ownerUids array
      // 'resource.data' refers to the document *as it exists in the database BEFORE the update*
      // 'request.resource.data' refers to the document *as it would be AFTER the update*
      allow update: if request.auth != null && request.auth.uid in resource.data.ownerUids;

      // Allow a user to delete an event if their UID is in the event's ownerUids array
      allow delete: if request.auth != null && request.auth.uid in resource.data.ownerUids;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow authenticated users to read user profiles (for search, display owner names, etc.)
      // Be mindful of what data is publicly readable.
      // Consider restricting read access to specific fields if needed for privacy.
      allow read: if request.auth != null;

      // Allow a user to create and update their own profile document
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
